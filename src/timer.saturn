// Generated module: Timer
use { rtti: { arguments } } in std;

class Timer {
  /**
   * Returns the average delta time (seconds per frame) over the last second.
   */
  @arguments()
  fn get_average_delta() {
    return love.timer.getAverageDelta();
  }
  /**
   * Pauses the current thread for the specified amount of time.
   */
  @arguments(("s", "any"))
  fn sleep(s) {
    return love.timer.sleep(s);
  }
  /**
   * Returns the value of a timer with an unspecified starting time.
   * This function should only be used to calculate differences between points in time, as the starting time of the timer is unknown.
   */
  @arguments()
  fn get_time() {
    return love.timer.getTime();
  }
  /**
   * Measures the time between two frames.
   * Calling this changes the return value of love.timer.getDelta.
   */
  @arguments()
  fn step() {
    return love.timer.step();
  }
  /**
   * Returns the time between the last two frames.
   */
  @arguments()
  fn get_delta() {
    return love.timer.getDelta();
  }
  /**
   * Returns the current frames per second.
   */
  @arguments()
  fn get_f_p_s() {
    return love.timer.getFPS();
  }
}

return Timer;
