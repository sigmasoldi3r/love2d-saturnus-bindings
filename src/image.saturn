// Generated module: Image
use { rtti: { arguments } } in std;

class Image {
  /**
   * Creates a new ImageData object.
   */
  @arguments(("width", "any"), ("height", "any"))
  fn new_image_data(width, height) {
    return love.image.newImageData(width, height);
  }
  /**
   * Determines whether a file can be loaded as CompressedImageData.
   */
  @arguments(("filename", "any"))
  fn is_compressed(filename) {
    return love.image.isCompressed(filename);
  }
  /**
   * Create a new CompressedImageData object from a compressed image file. LÃ–VE supports several compressed texture formats, enumerated in the CompressedImageFormat page.
   */
  @arguments(("filename", "any"))
  fn new_compressed_data(filename) {
    return love.image.newCompressedData(filename);
  }
}

return Image;
